diamonds %>% na.omit(diamonds) %>% diamonds[sample(nrow(diamonds), 1000), ] %>% diamonds
library(dplyr)
diamonds %>% na.omit(diamonds) %>% diamonds[sample(nrow(diamonds), 1000), ] %>% diamonds
library(ggplot2)
diamonds %>% na.omit(diamonds) %>% diamonds[sample(nrow(diamonds), 1000), ] %>% diamonds
diamonds %>% na.omit(diamonds) %>% diamonds[sample(nrow(diamonds), 1000), ] -> diamonds
diamonds %>% na.omit(diamonds) -> diamonds
na.omit(diamonds) -> diamonds
diamonds <- na.omit(diamonds)
rm(diamonds)
data(diamonds)
diamonds <- na.omit(diamonds)
diamonds <- na.omit(diamonds) %>% diamonds[sample(nrow(diamonds), 1000), ]
data(diamonds)
d <- diamonds %>%
na.omit() %>%
sample_n(1000)
options(warn = -1)
data(diamonds, package = "ggplot2")
d <- diamonds %>%
na.omit() %>%
sample_n(1000)
p1 <- ggplot(d, aes(x = carat, y = price)) +
facet_wrap(~cut, ncol = 1, scales = "free") +
geom_point(alpha = .3) +
geom_smooth(aes(colour = cut, fill = cut) method = "lm") +
p1 <- ggplot(d, aes(x = carat, y = price)) +
facet_wrap(~cut, ncol = 1, scales = "free") +
geom_point(alpha = .3) +
geom_smooth(aes(colour = cut, fill = cut), method = "lm") +
ylim(c(0, 20000))
p1
library(ggplot)
library(ggplot)
data(diamonds, package = "ggplot2")
d <- diamonds %>%
na.omit() %>%
sample_n(1001)
p1 <- ggplot(d, aes(x = carat, y = price)) +
facet_wrap(~cut, ncol = 1, scales = "free") +
geom_point(alpha = .3, size = 1) +
geom_smooth(aes(colour = cut, fill = cut)) +
ylim(c(0, 20000)) +
theme(legend.position = "none")
d_sum <-
d %>%
select(cut, price, color) %>%
group_by(cut) %>%
summarise(xintercept = mean(price))
p2 <- ggplot(d, aes(x = price, fill = cut, color = cut)) +
geom_histogram() +
facet_wrap(~cut, ncol = 1, scales = "free") +
geom_vline(data = d_sum, aes(xintercept = xintercept)) +
geom_text(data = d_sum, aes(label = trunc(xintercept), x = xintercept+1000),
y = 6000, hjust = 0) +
theme(legend.position = "false") +
scale_x_continuous(breaks = c(0, 5000, 1000))
grid.arrange(p1, p2, nrow = 1)
library(gridExtra)
library(ggplot)
library(gridExtra)
data(diamonds, package = "ggplot2")
d <- diamonds %>%
na.omit() %>%
sample_n(1001)
p1 <- ggplot(d, aes(x = carat, y = price)) +
facet_wrap(~cut, ncol = 1, scales = "free") +
geom_point(alpha = .3, size = 1) +
geom_smooth(aes(colour = cut, fill = cut)) +
ylim(c(0, 20000)) +
theme(legend.position = "none")
d_sum <-
d %>%
select(cut, price, color) %>%
group_by(cut) %>%
summarise(xintercept = mean(price))
p2 <- ggplot(d, aes(x = price, fill = cut, color = cut)) +
geom_histogram() +
facet_wrap(~cut, ncol = 1, scales = "free") +
geom_vline(data = d_sum, aes(xintercept = xintercept)) +
geom_text(data = d_sum, aes(label = trunc(xintercept), x = xintercept+1000),
y = 6000, hjust = 0) +
theme(legend.position = "false") +
scale_x_continuous(breaks = c(0, 5000, 1000))
grid.arrange(p1, p2, nrow = 1)
library(ggplot2)
library(gridExtra)
data(diamonds, package = "ggplot2")
d <- diamonds %>%
na.omit() %>%
sample_n(1001)
p1 <- ggplot(d, aes(x = carat, y = price)) +
facet_wrap(~cut, ncol = 1, scales = "free") +
geom_point(alpha = .3, size = 1) +
geom_smooth(aes(colour = cut, fill = cut)) +
ylim(c(0, 20000)) +
theme(legend.position = "none")
d_sum <-
d %>%
select(cut, price, color) %>%
group_by(cut) %>%
summarise(xintercept = mean(price))
p2 <- ggplot(d, aes(x = price, fill = cut, color = cut)) +
geom_histogram() +
facet_wrap(~cut, ncol = 1, scales = "free") +
geom_vline(data = d_sum, aes(xintercept = xintercept)) +
geom_text(data = d_sum, aes(label = trunc(xintercept), x = xintercept+1000),
y = 6000, hjust = 0) +
theme(legend.position = "false") +
scale_x_continuous(breaks = c(0, 5000, 1000))
grid.arrange(p1, p2, nrow = 1)
library(ggplot2)
library(gridExtra)
data(diamonds, package = "ggplot2")
d <- diamonds %>%
na.omit() %>%
sample_n(1001)
library(dplyr)
data(diamonds, package = "ggplot2")
d <- diamonds %>%
na.omit() %>%
sample_n(1001)
p1 <- ggplot(d, aes(x = carat, y = price)) +
facet_wrap(~cut, ncol = 1, scales = "free") +
geom_point(alpha = .3, size = 1) +
geom_smooth(aes(colour = cut, fill = cut)) +
ylim(c(0, 20000)) +
theme(legend.position = "none")
d_sum <-
d %>%
select(cut, price, color) %>%
group_by(cut) %>%
summarise(xintercept = mean(price))
p2 <- ggplot(d, aes(x = price, fill = cut, color = cut)) +
geom_histogram() +
facet_wrap(~cut, ncol = 1, scales = "free") +
geom_vline(data = d_sum, aes(xintercept = xintercept)) +
geom_text(data = d_sum, aes(label = trunc(xintercept), x = xintercept+1000),
y = 6000, hjust = 0) +
theme(legend.position = "false") +
scale_x_continuous(breaks = c(0, 5000, 1000))
grid.arrange(p1, p2, nrow = 1)
setwd("~/Documents/OneDrive/Vortraege/2016/dplyr_WS")
library(dplyr)
library(nycflights13)
filter(flights, origin == "JFK", dest == "PWM")
library(nycflights13)
data(flights)
glimpse(flights)
filter(flights, origin == "JFK", month == 1, dest == "PWM", dep_delay >= 60)  #2
filter(flights, origin == "JFK", arr_delay > 2 * dep_delay, month == 1, dest == "ATL")  #5
flights2 <- select(flights, dep_delay, arr_delay, tailnum, flight, dest)
arrange(flights2, desc(dep_delay))  #1
flights %>%
filter(!is.na(dep_delay)) %>%
group_by(date, hour) %>%
summarise(delay = mean(dep_delay), n = n()) %>%
filter(n > 10)
flights %>%
filter(!is.na(dep_delay)) %>%
group_by(day, hour) %>%
summarise(delay = mean(dep_delay), n = n()) %>%
filter(n > 10)
flights %>%
group_by(carrier) %>% na.omit() %>%
mutate(delay = dep_delay - arr_delay) %>%
summarise(delay_mean = mean(delay, na.rm = TRUE)) %>%
filter(delay_mean < quantile(delay_mean, .1)) %>%
# oder: filter(ntile(delay_mean, 10) == 1) %>%
arrange(delay_mean)
flights %>%
group_by(carrier) %>% na.omit() %>%
mutate(delay = dep_delay - arr_delay) %>%
summarise(delay_mean = mean(delay, na.rm = TRUE)) %>%
# filter(delay_mean < quantile(delay_mean, .1)) %>%
filter(ntile(delay_mean, 10) == 1) %>%
arrange(delay_mean)
flights %>%
group_by(carrier) %>%
na.omit() %>%
mutate(delay = dep_delay - arr_delay) %>%
summarise(delay_mean = mean(delay, na.rm = TRUE)) %>%
mutate(delay_mean_decile = ntile(delay_mean, 10)) %>%
filter(delay_mean_decile == 1) %>%
arrange(delay_mean)
flights %>%
group_by(carrier) %>%
na.omit() %>%
mutate(delay = dep_delay - arr_delay) %>%
summarise(delay_mean = mean(delay, na.rm = TRUE)) %>%
mutate(delay_mean_decile = ntile(delay_mean, 10)) %>%
filter(delay_mean_decile == 10) %>%
arrange(delay_mean)
flights %>%
group_by(carrier) %>%
na.omit %>%
mutate(delay = dep_delay - arr_delay) %>%
summarise(delay_mean = mean(delay, na.rm = TRUE)) %>%
mutate(delay_mean_decile = ntile(delay_mean, 10)) %>%
filter(delay_mean_decile == 1) %>%   # vgl. == 10
arrange(delay_mean)
flights %>%  na.omit() %>%  mutate(delay = dep_delay - arr_delay) %>%
filter(delay > 60) %>%
summarise(delay_mean = mean(delay),
n = n()) %>%  # Anzahl
arrange(delay_mean)
qplot(carat, price, data = dsmall, geom = c("point", "smooth"))
qplot(carat, price, data = diamonds, geom = c("point", "smooth"))
f2 <- flights %>%
na.omit() %>% mutate(delay = dep_delay - arr_delay)
qplot(data = f2, x = delay,
main = paste("Delays [min]; Min: ", min(f2$delay), "; Max: ", max(f2$delay),
"; Md: ", median(f2$delay), sep = ""), geom = c("point", "smooth"))
flights %>%
mutate(delay = dep_delay - arr_delay) %>%
na.omit() %>% qplot(x = distance, y = delay, data = ., , geom = c("point", "smooth"))
flights %>%
mutate(delay = dep_delay - arr_delay) %>%
na.omit() %>% qplot(x = distance, y = delay, data = ., geom = c("point", "smooth"))
f2 <- group_by(flights, carrier)
f3 <- mutate(f2, delay = dep_delay - arr_delay)
f4 <- filter(f3, !is.na(delay))
f5 <- summarise(f4, delay_min = mean(delay))
arrange(f5, delay_min)
iris %>% select(is.numeric())
iris %>% select_if(is.numeric())
iris %>% select_if(is.numeric)
iris %>% select_if(is.numeric) %>%
select_if(mean > 3)
iris %>% select_if(is.numeric) %>%
select_if(ColMeans > 3)
iris %>% select_if(is.numeric) %>%
select_if(colMeans > 3)
iris %>% select_if(is.numeric) %>%
select_if(colMeans > 3)
glimpse(iris)
colMeans(iris$Sepal.Width)
mean(iris$Sepal.Width) > 3
iris %>% select_if(is.numeric) %>%
select_if(mean(.) > 3)
iris %>% select_if(is.numeric) %>%
select_if(mean() > 3)
iris %>% select_if(is.numeric) %>%
select_if(mean(.) > 3)
iris %>% select_if(is.numeric) %>%
select_if(mean > 3)
iris %>% select(isTRUE(is.numeric))
iris %>% select(isTRUE(is.numeric()))
iris %>% select(isTRUE(is.numeric(.)))
flights %>%
group_by(carrier) %>% na.omit() %>% mutate(delay = dep_delay - arr_delay) %>%
ungroup() %>% filter(min_rank(delay) < 11) %>%
arrange(delay) %>% qplot(data = ., x = reorder(carrier, delay), y = delay,
geom = c("point", "smooth"))
flights %>%
group_by(carrier) %>% na.omit() %>% mutate(delay = dep_delay - arr_delay) %>%
ungroup() %>% filter(min_rank(delay) < 11) %>%
arrange(delay) %>% qplot(data = ., x = reorder(carrier, delay), y = delay,
geom = c "smooth"))
flights %>%
group_by(carrier) %>% na.omit() %>% mutate(delay = dep_delay - arr_delay) %>%
ungroup() %>% filter(min_rank(delay) < 11) %>%
arrange(delay) %>% qplot(data = ., x = reorder(carrier, delay), y = delay,
geom = c("smooth"))
flights %>%
group_by(carrier) %>% na.omit() %>% mutate(delay = dep_delay - arr_delay) %>%
ungroup() %>% filter(min_rank(delay) < 11) %>%
arrange(delay) %>% qplot(data = ., x = reorder(carrier, delay), y = delay,
geom = "point")
